<link rel="stylesheet" href="//blueimp.github.io/Gallery/css/blueimp-gallery.min.css">
<link rel="stylesheet" href="<?php echo $this->basepath(); ?>/css/upload/jquery.fileupload.css">
<link rel="stylesheet" href="<?php echo $this->basepath(); ?>/css/upload/jquery.fileupload-ui.css">


<div class="clearfix img-panel hidden">
    <!-- The fileinput-button span is used to style the file input field as button -->
    <span class="btn btn-success fileinput-button">
        <i class="glyphicon glyphicon-plus"></i>
        <span>Add files...</span>
        <!-- The file input field used as target for the file upload widget -->
        <input id="fileupload" type="file" name="files[]" multiple>
    </span>
    <br>
    <br>
    <!-- The container for the uploaded files -->
    <div id="files" class="files "></div>
</div>


<script src="<?php echo $this->basepath(); ?>/js/upload/vendor/jquery.ui.widget.js"></script>
<script src="//blueimp.github.io/JavaScript-Load-Image/js/load-image.all.min.js"></script>
<script src="//blueimp.github.io/JavaScript-Canvas-to-Blob/js/canvas-to-blob.min.js"></script>
<script src="<?php echo $this->basepath(); ?>/js/upload/jquery.fileupload.js"></script>
<script src="<?php echo $this->basepath(); ?>/js/upload/jquery.fileupload-process.js"></script>
<script src="<?php echo $this->basepath(); ?>/js/upload/jquery.fileupload-image.js"></script>

<script>
    /*jslint unparam: true, regexp: true */
    /*global window, $ */
    $(function () {
        'use strict';
        // Change this to the location of your server-side upload handler:
        var url =  '<?php echo $this->basepath();?>/uploadimg';
        var uploadButton = $('<button/>')
                .addClass('btn btn-primary btn-xs')
                .attr('name','btnUpload')
                .prop('disabled', true)
                .text('Processing...')
                .on('click', function () {
                    var $this = $(this),
                        data = $this.data();
                    $this.parent().find('.progress').addClass('uploading');
                    $this
                        .off('click')
                        .text('Abort')
                        .on('click', function () {
                            $this.remove();
                            data.abort();
                        });
                    data.submit().always(function () {
//                        $this.remove();
                        $this.parent('p').find('button').remove();
                        return false;
                    });
                });
        var cancelButton = $('<button/>')
                .addClass('btn btn-warning btn-xs pull-right')
                .text(' Cancel ')
                .on('click', function(){
                    var $this = $(this);
                    $this.parents('.img-thumb').remove();
                })
            ;
        $('#fileupload').fileupload({
            url: url,
            dataType: 'json',
            autoUpload: false,
            acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i,
            maxFileSize: 5000000, // 5 MB
            // Enable image resizing, except for Android and Opera,
            // which actually support image resizing, but fail to
            // send Blob objects via XHR requests:
            disableImageResize: /Android(?!.*Chrome)|Opera/
                .test(window.navigator.userAgent),
            previewMaxWidth: 150,
            previewMaxHeight: 150,
            previewCrop: true
        }).on('fileuploadadd', function (e, data) {
            data.context = $('<div class="pull-left m-10 img-thumb" />').appendTo('#files');
            $.each(data.files, function (index, file) {
                var node = $('<p/>')
                    //.append($('<span/>').text(file.name));
                if (!index) {
                    node
//                        .append('<br>')
                        .append('<div class="progress"><div class="progress-bar progress-bar-success "></div></div>')
                        .append(uploadButton.clone(true).data(data))
                        .append(cancelButton.clone(true).data(data))
                    ;
                }
                node.appendTo(data.context);
            });
            $('#progress .progress-bar').css('width', '0%');
        }).on('fileuploadprocessalways', function (e, data) {
            var index = data.index,
                file = data.files[index],
                node = $(data.context.children()[index]);
            if (file.preview) {
                node
                    .prepend('<br>')
                    .prepend(file.preview);
            }
            if (file.error) {
                node
                    .append('<br>')
                    .append($('<span class="text-danger"/>').text(file.error));
            }
            if (index + 1 === data.files.length) {
                data.context.find('button[name="btnUpload"]')
                    .text('Upload')
                    .prop('disabled', !!data.files.error);
            }
        }).on('fileuploadprogressall', function (e, data) {

            var progress = parseInt(data.loaded / data.total * 100, 10);
            $('.progress.uploading .progress-bar').css(
                'width',
                progress + '%'
            );
        }).on('fileuploaddone', function (e, data) {
            $.each(data.result.files, function (index, file) {
                if (file.url) {
                    var link = $('<a>')
                        .attr('target', '_blank')
                        .prop('href', file.url);
                    $(data.context.children()[index])
                        .wrap(link);
                } else if (file.error) {
                    var error = $('<span class="text-danger"/>').text(file.error);
                    $(data.context.children()[index])
                        .append('<br>')
                        .append(error);
                }
            });

            images.push(data.result.files[0].name);
            e.stopPropagation();

        }).on('fileuploadfail', function (e, data) {
            $.each(data.files, function (index) {
                var error = $('<span class="text-danger"/>').text('File upload failed.');
                $(data.context.children()[index])
                    .append('<br>')
                    .append(error);
            });
        }).prop('disabled', !$.support.fileInput)
            .parent().addClass($.support.fileInput ? undefined : 'disabled');
    });
</script>

